{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _uncontrollable = require(\"uncontrollable\");\n\nvar _createWithBsPrefix = _interopRequireDefault(require(\"./utils/createWithBsPrefix\"));\n\nvar _NavbarBrand = _interopRequireDefault(require(\"./NavbarBrand\"));\n\nvar _NavbarCollapse = _interopRequireDefault(require(\"./NavbarCollapse\"));\n\nvar _NavbarToggle = _interopRequireDefault(require(\"./NavbarToggle\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar _NavbarContext = _interopRequireDefault(require(\"./NavbarContext\"));\n\nvar _SelectableContext = _interopRequireDefault(require(\"./SelectableContext\"));\n\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\n\nvar Navbar = _react.default.forwardRef(function (props, ref) {\n  var _useUncontrolled = (0, _uncontrollable.useUncontrolled)(props, {\n    expanded: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = (0, _objectWithoutPropertiesLoose2.default)(_useUncontrolled, [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"]);\n\n  bsPrefix = (0, _ThemeProvider.useBootstrapPrefix)(bsPrefix, 'navbar');\n  var handleCollapse = (0, _react.useCallback)(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      _onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = (0, _react.useMemo)(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return _react.default.createElement(_NavbarContext.default.Provider, {\n    value: navbarContext\n  }, _react.default.createElement(_SelectableContext.default.Provider, {\n    value: handleCollapse\n  }, _react.default.createElement(Component, (0, _extends2.default)({\n    ref: ref\n  }, controlledProps, {\n    className: (0, _classnames.default)(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\n\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = _NavbarBrand.default;\nNavbar.Toggle = _NavbarToggle.default;\nNavbar.Collapse = _NavbarCollapse.default;\nNavbar.Text = (0, _createWithBsPrefix.default)('navbar-text', {\n  Component: 'span'\n});\nvar _default = Navbar;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}